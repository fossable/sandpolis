[package]
authors = ["Tyler Cook"]
description = "Ultimate remote monitoring and management"
edition = "2021"
license = "AGPL-3.0-only"
name = "sandpolis"
repository = "https://github.com/fossable/sandpolis"
rust-version = "1.74"
version = "0.0.1"

[build-dependencies]
built = { version = "0.7", features = ["cargo-lock", "dependency-tree", "git2", "chrono", "semver"] }

[dev-dependencies]
tempfile = "3.15.0"

[dependencies]
anyhow = "1.0.76"
aws-lc-rs = "1.12.1"
chrono = { version = "0.4.39", features = ["serde"] }
clap = { version = "4.4.7", features = ["derive", "string"] }
dialoguer = { version = "0.11.0" }
fuser = { version = "0.15.1", optional = true, default-features = false, features = ["serializable"] }
futures = "0.3.30"
futures-util = "0.3.31"
once_cell = "1.20.2"
os_info = "3.8.2"
pem = "3.0.4"
rand = "0.8.5"
reqwest = { version = "0.12.5", default-features = false, features = ["stream", "cookies", "json", "rustls-tls", "charset"] }
reqwest-websocket = "0.4.4"
rustls = "0.23.21"
sandpolis-macros = { path = "../sandpolis-macros" }
serde_bytes = "0.11.15"
serde_cbor = "0.11.2"
serde_json = "1.0.134"
serde = { version = "1.0.203", features = ["derive"] }
serde_with = { version = "3.12.0", features = ["chrono"] }
sled = { version = "0.34.7" }
strum = { version = "0.26.3", features = ["derive"] }
tokio = { version = "1.42.0", features = ["full"] }
time = { version = "0.3.37" }
tracing = "0.1.40"
tracing-subscriber = { version = "0.3.18", features = ["env-filter"] }
url = "2.5.4"
uuid = { version = "1.10.0", features = ["v7", "serde"] }
validator = { version = "0.19", features = ["derive"] }

# Server dependencies
axum-macros = { version = "0.5.0", optional = true }
axum-extra = { version = "0.10.0", optional = true, features = ["typed-header"] }
axum-server = { version = "0.7.1", features = ["tls-rustls"], optional = true }
axum = { version = "0.8.0", optional = true, features = ["ws", "json"] }
tower = { version = "0.5.2", optional = true }
jsonwebtoken = { version = "9.3.0", optional = true }
rcgen = { version = "0.13.1", optional = true, features = ["crypto", "pem", "x509-parser"] }
ring = { version = "0.17.8", optional = true }
rustls-pki-types = { version = "1.10.1", optional = true }
tokio-rustls = { version = "0.26.0", optional = true }
x509-parser = { version = "0.16.0", optional = true }
openraft = { version = "0.9.17", optional = true }

# Client dependencies
bevy = { version = "0.15.1", optional = true }
bevy_svg = { version = "0.15.1", optional = true, features = ["2d"] }
bevy_egui = { version = "0.31.1", optional = true }
bevy_rapier2d = { version = "0.28.0", optional = true }
egui = { version = "0.29.1", optional = true }
passwords = { version = "3.1.16", optional = true, features = ["common-password"] }

# Agent dependencies
sysinfo = { version = "0.33.0", optional = true }

# Server/Client dependencies
totp-rs = { version = "5.6.0", optional = true, features = ["otpauth", "zeroize"] }
argon2 = { version = "0.5.3", optional = true }

[features]
# Instances
server = [ "dep:axum", "dep:axum-server", "dep:axum-macros", "dep:axum-extra", "dep:tower", "dep:rcgen", "dep:rustls-pki-types", "dep:tokio-rustls", "dep:ring", "dep:jsonwebtoken", "dep:totp-rs", "totp-rs?/gen_secret", "dep:x509-parser", "dep:openraft", "dep:argon2" ]
agent = [ "dep:axum", "dep:axum-server", "dep:axum-macros", "dep:sysinfo" ]
client = [ "dep:bevy", "dep:bevy_rapier2d", "dep:bevy_egui", "dep:bevy_svg", "dep:egui", "dep:totp-rs", "totp-rs?/qr", "dep:passwords", "dep:argon2" ]

# Layers
layer-account = []
layer-alerts = []
layer-deploy = []
layer-desktop = []
layer-filesystem = ["dep:fuser"]
layer-health = []
layer-inventory = []
layer-location = []
layer-logging = []
layer-package = []
layer-shell = []
layer-sysinfo = []
layer-probe = []
layer-tunnel = []

default = [ "layer-desktop", "layer-filesystem", "layer-shell", "layer-sysinfo", "layer-inventory", "layer-account", "layer-logging" ]
wayland = [ "bevy/wayland" ]
rcgen = ["dep:rcgen"]
